// Assignment Code
var generateBtn = document.querySelector("#generate");

// Write password to the #password input
function writePassword() {
  var password = generatePassword();
  var passwordText = document.querySelector("#password");

  passwordText.value = password;

}

// Defining all the possible characters usable in the password to create the final array of characters in pwCharSet:
let alphaLow = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];
let alphaUp = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"];
let specialChar = ["+", "-", "&", "|", "!", "(", ")", "{", "}", "[", "]", "^", "~", "*", "?", ":"];
let numeric = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
let pwCharSet = [];

// generatepassword triggers the overall function of the app, encompassing all the rest of the code:
function generatepassword() {

  // These are the questions posed to the user to determine the makeup of the password and logs those responses to the console for easier viewing:
  charNumAns = prompt("How many characters would you like your password to be?", [12]);
  console.log(`PW Characters: ${charNumAns}`);

  caseUpAns = confirm('Do you want to include upper case letters? Press OK for Yes, Cancel for No.');
  console.log(`Upper case letters: ${caseUpAns}`);

  caseLowAns = confirm('Do you want to include lower case letters? Press OK for Yes, Cancel for No.');
  console.log(`Lower case letters: ${caseLowAns}`);

  numericCharAns = confirm('Do you want to include numbers? Press OK for Yes, Cancel for No.');
  console.log(`Numbers: ${numericCharAns}`);

  specialCharAns = confirm('Do you want to include special characters? Press OK for Yes, Cancel for No.');
  console.log(`Special Characters: ${specialCharAns}`);

  // these if statements use push mergers to build the final array of usable characters based on the user's answers:
  if (caseUpAns === true) {
    Array.prototype.push.apply(pwCharSet, alphaUp);
  }
  if (caseLowAns === true) {
    Array.prototype.push.apply(pwCharSet, alphaLow);
  }
  if (numericCharAns === true) {
    Array.prototype.push.apply(pwCharSet, numeric);
  }
  if (specialCharAns === true) {
    Array.prototype.push.apply(pwCharSet, specialChar);
  }
  console.log(pwCharSet);

  // This for loop references the pwCharSet array and chooses a random index (numberChoice). It then uses that index to refrence characters in the pwCharSet array, associating each character with the variable eachChar. Finally, it pushes each character to a new array, each element of which is a character in the final password:
  let numberChoice = null;
  let passArray = [];
  for (let i = 0; i < charNumAns; i++) {
    numberChoice = Math.floor(Math.random() * pwCharSet.length);
    eachChar = pwCharSet[numberChoice];
    // console.log(eachChar);
    passArray.push(eachChar);
  }
  console.log(passArray);
  console.log(passArray.join(""));

  // This takes the array generated by the for loop above, joins each element into a string, and associates that string with the passFinal variable for easy application elsewhere:
  let passFinal = passArray.join("");
  console.log(passFinal);



}
generatepassword();




// TODO: add validations to make sure at least 1 type of character is selected

// TODO: add validation that length is at least 8 and no more than 128 characters






// Add event listener to generate button
generateBtn.addEventListener("click", writePassword);
